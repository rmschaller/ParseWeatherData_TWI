# Rob Schaller (c) 2018
# Description - This PERL script reads in text files generated by selected
#               models of weather stations by Texas Weather Instruments
#               and parses each file and writes the weather data including
#               The date and time stamp.
# Input File - A text based file generated by the weather station with a 
#              file extension of *.twi
# Outout File- A tab delimted text file that can be imported into a
#              spreadsheet. 
# Note - debug steps have been left in as comments for future use if needed
#############################
#
use File::Find;
use strict;
my $header;
my $inputLine;
my $rowOfData;
my $lineOfData;
my $firstLineOfData;
my $secondLineOfData;
my $filename;
my $year;
my $month;
my $date;
my $hour;
my $dir = "/home/pi/wxdata/";
my $x;
my $y;
my $z;
my $firstRowOfData;
my $secondRowOfData;
my $lastDay;

####################################################################################
############ User input for output file ############################################
print "Specify the output file to write results to: ";
my $argLine = <STDIN>;
chomp($argLine);
my $fileOut = $argLine;
my $fileOutErr = "ErrLog.txt";
# do some error-checking
unless($fileOut) { die ("Missing a file name, try again!");}
($fileOut =~ /\.txt?$/) or $fileOut.=".txt";
open(FOUT, ">".$fileOut) or die ("Error! can't open file: $fileOut for reading!\n");
open(FOUTERR, ">".$fileOutErr) or die ("Error! can't open file: $fileOutErr for reading!\n"); 
$header = "Date"."\t"."Time of Day"."\t"."Wind Direction"."\t"."Wind Speed (MPH)"."\t"."Solar (W/m^2)"."\t"."Indoor Temp (F)"."\t"."Outdoor Temp (F)"."\t"."Humidity (%)"."\t"."Barometric Pressure (inMg)"."\t"."Daily Rainfall (in)"."\t"."Monthly Rainfall (in)"."\t"."Term Rainfall (in)"."\t"."Dewpoint (F)"."\t"."Temperature Humidity Index (F)"."\t"."Windchill (F)"."\n";
print FOUT "$header";
######################################################################################
# Loop through all of the file names for the weather data 
for($year = 18 ; $year < 19 ; $year++)
{
	for($x = 1 ; $x <= 11 ; $x++)
	{
		if ($x == 1 or $x == 3 or $x == 5 or $x == 7 or $x == 8 or $x == 10 or $x == 12)
		{
			$lastDay = 31;
		}
		elsif ($x == 2)
		{
			$lastDay = 28;
		}
		else
		{
			$lastDay = 30;
		}
		print "The last day of month is: "."$lastDay"."\n";		
		if ($x < 10 )
		{
			$month = "0".$x;
		}
		else
		{
			$month = $x;
		}
		for($y = 1 ; $y <= $lastDay ; $y++)
		{
			if ($y < 10)
			{
				$date = "0".$y;
			}
			else
			{
				$date = $y;
			}
			for($z = 0 ; $z < 24 ; $z++)
			{
				if ($z < 10 )
				{
					$hour = "0".$z;
				}
				else
				{
					$hour = $z;
				}
				$filename = "twi"."$year"."$month"."$date"."$hour"."00"."\.txt";				#print FOUT "$filename"."\n";
				#print "Processing: Year => "."$year"." Month => "."$month"." Dy => "."$date"." Hour => "."$hour"."\n";
				# Call the subroutine which will search for matching filename
				find(\&recordSearch,$dir);
			}# end for-loop for hour
		}# end for-loop for date
	}# end for-loop for month
}# end for-loop for year
close(FOUT);
close(FOUTERR);
#
# End of MAIN program
#
# Subroutine starts here
#
sub recordSearch
{
	my $firstRowOfData;
	my $secondRowOfData;
	my $lineOfData;
	#print FOUT "Running record search routine...\n";
	if(/$filename/)
	{
		#print FOUT "processing file: "."$filename"."\n";
		open(FIN, "<" .$filename) or die ("Error! unable to open input file: $filename for reading!\n");
		while($inputLine = <FIN>)
		{
			chomp($inputLine);
			if($inputLine =~ m/^([0-9]{2}:[0-9]{2})\s+([0-9]{2}\/[0-9]{2}\/[0-9]{2})\s+([A-Z]{1,3})\s+([0-9]{2})MPH\s+([0-9]{3})K\s+([0-9]{1,3})F\s+([-]?[0-9]{1,3})F\s+([0-9]{3})%\s+([0-9]{2}.[0-9]{2})[A-Z]{1}\s+([0-9]{2}.[0-9]{2})"D\s+([0-9]{2}.[0-9]{2})"M\s+([0-9]{2}.[0-9]{2})"T$/)
			{
				#print FOUT "Matched first line of data!\n";
				my $tod                = $1;
				my $date               = $2;
				my $windDir            = $3;
				my $windSpeed          = $4;
				my $solar              = $5;
				my $indoorTemp         = $6;
				my $outdoorTemp        = $7;
				my $humidity           = $8;
				my $barometricPressure = $9;
				my $dailyRain          = $10;
				my $monthlyRain        = $11;
				my $termRain           = $12;
				$firstRowOfData = $date."\t".$tod."\t".$windDir."\t".$windSpeed."\t".$solar."\t".$indoorTemp."\t".$outdoorTemp."\t".$humidity."\t".$barometricPressure."\t".$dailyRain."\t".$monthlyRain."\t".$termRain;
				#print "debug first line -> "."$filename"." "."$firstRowOfData";

			}# end first line of data parse
			elsif($inputLine =~ m/^([-]?[0-9]{1,2})DP\s+([-]?[0-9]{1,3})TH\s+([-]?[0-9]{1,3})WC$/)
			{
				my $dewPoint  = $1;
				my $thi       = $2;
				my $windchill = $3;
				$secondRowOfData = $dewPoint."\t".$thi."\t".$windchill;
				$lineOfData = "$firstRowOfData"."$secondRowOfData";
				#print "debug first line of data => "."$firstRowOfData"."\n";
				#print FOUT "$lineOfData";
			}# end second line of data  
			#print  "debug first line of data => "."$firstRowOfData"."\n";
			#print  "debug line of data => "."$lineOfData";
			#
			#print FOUT "$lineOfData";
			#close(FIN);
	}# end matching a record
	print FOUT "$lineOfData"."\n";
	if(not defined $firstRowOfData)
	{
		print FOUTERR "issue with file: "."$filename"."\n";
	}
	close(FIN);
	}# end found weather data file
	return;
	}# end recordSearch subroutine
